package sample.application;

import java.io.*;
import java.net.URL;
import java.util.ResourceBundle;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.TextField;
import javafx.stage.Stage;

import java.util.Random;

public class CustomerController {

    @FXML
    private ResourceBundle resources;

    @FXML
    private URL location;

    @FXML
    private TextField CustomerNameTxtField;

    @FXML
    private Button ReadyButton;

    @FXML
    void initialize() {
        Random random = new Random();
        int index = random.nextInt(0,1000);
        String stringindex = Integer.toString(index);
        writeToFile("D:\\!JAVA\\COFFEE HOUSE MENU\\TEMP FILES\\index_temp_list.txt",stringindex);

        ReadyButton.setOnAction(event -> {

            String userInput = CustomerNameTxtField.getText();
            writeToFile("D:\\!JAVA\\COFFEE HOUSE MENU\\TEMP FILES\\customername_temp_list.txt",userInput);
            createFile("D:\\!JAVA\\COFFEE HOUSE MENU\\RECEIPTS\\customer_receipt_"+userInput+"_"+index+".txt");
            System.out.println(userInput);

            try {
                System.out.println("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª-–∞ –Ω–∞ –∫–Ω–æ–ø–∫—É \"–ì–æ—Ç–æ–≤–æ\".");

                // –ó–∞–≥—Ä—É–∑–∫–∞ fxml —Ñ–∞–π–ª–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –æ–∫–Ω–∞
                FXMLLoader fxmlLoader = new FXMLLoader(FinalApplication.class.getResource("reset.fxml"));
                Scene scene = new Scene(fxmlLoader.load(), 500, 520);
                Stage stage = new Stage();
                stage.setTitle("BASKET");
                stage.setScene(scene);
                stage.show();

            } catch (IOException e) {
                e.printStackTrace();
            }


            // –ß—Ç–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞
            String itemContent = readFromFile("D:\\!JAVA\\COFFEE HOUSE MENU\\TEMP FILES\\item_temp_list.txt");
            String priceContent = readFromFile("D:\\!JAVA\\COFFEE HOUSE MENU\\TEMP FILES\\price_temp_list.txt");
            String totalContent = readFromFile("D:\\!JAVA\\COFFEE HOUSE MENU\\TEMP FILES\\totalprice_temp_list.txt");

            // –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Ñ–∞–π–ª–æ–≤ –Ω–∞ —Å—Ç—Ä–æ–∫–∏
            String[] items = itemContent.split("\n");
            String[] prices = priceContent.split("\n");

            // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –∫ receipt
            StringBuilder receipt = new StringBuilder();
            receipt.append("\t\t  –ö–æ—Ñ–µ –Ω–∞ —Ä–∞–π–æ–Ω–µ üòé\n")
                    .append("üìí –ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞:").append(index).append("\n")
                    .append("‚¨áÔ∏è ------------------------------------------- ‚¨áÔ∏è\n")
                    .append("    "+userInput).append(", –∫–æ–≥–¥–∞ –≤–∞—à –∑–∞–∫–∞–∑ –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤,\n")
                    .append("    –µ–≥–æ –Ω–æ–º–µ—Ä –∏ –≤–∞—à–µ –∏–º—è –ø–æ—è–≤–∏—Ç—Å—è –Ω–∞ —ç–∫—Ä–∞–Ω–µ.\n")
                    .append("    –í—ã —Å–º–æ–∂–µ—Ç–µ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ –∑–∞–±—Ä–∞—Ç—å.\n")
                    .append("    –°–ø–∞—Å–∏–±–æ —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ –Ω–∞—Å! üíñ\n")
                    .append("‚òï ------------------------------------------- ‚òï\n");

            for (int i = 0; i < Math.min(items.length, prices.length); i++) {
                receipt.append(items[i]).append(": ").append(prices[i]).append("\n");
            }

            receipt.append("ü™ô –ò—Ç–æ–≥–æ: ").append(totalContent)
                    .append("‚òï ------------------------------------------- ‚òï\n")
                    .append("\t\t–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –∞–ø–ø–µ—Ç–∏—Ç–∞! ‚ú®");

            System.out.println(receipt);

            writeToFile("D:\\!JAVA\\COFFEE HOUSE MENU\\RECEIPTS\\customer_receipt_" + userInput + "_" + index + ".txt", receipt.toString());
        });


    }
    private void createFile(String fileName) {
        try {
            File file = new File(fileName);
            if (file.createNewFile()) {
                System.out.println("–§–∞–π–ª —Å–æ–∑–¥–∞–Ω: " + file.getName());
            } else {
                System.out.println("–§–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.");
            }
        } catch (IOException e) {
            System.out.println("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ñ–∞–π–ª–∞.");
            e.printStackTrace();
        }
    }

    private void writeToFile(String fileName, String text) {
        try (BufferedWriter writer = new BufferedWriter(new FileWriter(fileName))) {
            writer.write(text);
            System.out.println("–¢–µ–∫—Å—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω –≤ —Ñ–∞–π–ª.");
        } catch (IOException e) {
            System.out.println("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –≤ —Ñ–∞–π–ª.");
            e.printStackTrace();
        }
    }

    private String readFromFile(String fileName) {
        StringBuilder content = new StringBuilder();
        try (BufferedReader reader = new BufferedReader(new FileReader(fileName))) {
            String line;
            while ((line = reader.readLine()) != null) {
                content.append(line).append("\n");
            }
            System.out.println("–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—á–∏—Ç–∞–Ω.");
            System.out.println(content.toString());
        } catch (IOException e) {
            System.out.println("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞.");
            e.printStackTrace();
        }
        return content.toString();
    }
}

